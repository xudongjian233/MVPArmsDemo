apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.xudongjian.mvparmsdemo"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    在 app 的 Build.gradle 中引入 Lambda 插件
    compileOptions {//就算您使用 AndroidStuido v3.0, 也需要配置以下参数
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

//    也可以使用它来管理一些项目的信息, 这样有多个 module 也可以直接使用同一个信息
//    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
//    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
//    useLibrary 'org.apache.http.legacy'
//
//    defaultConfig {
//        minSdkVersion rootProject.ext.android["minSdkVersion"]
//        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
//        versionCode rootProject.ext.android["versionCode"]
//        versionName rootProject.ext.android["versionName"]
//    }
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
}

buildscript {
    repositories {
        jcenter()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //MVPArms
    compile 'me.jessyan:arms:2.4.1'

    //因为在顶级 build.gradle 中引用了它,所以在整个项目的所有 build.gradle 中都可以使用 rootProject.xxx 来使用它里面的内容
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile rootProject.ext.dependencies["junit"]
    compile rootProject.ext.dependencies["support-v4"]
    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["cardview-v7"]
    compile rootProject.ext.dependencies["autolayout"]
    compile rootProject.ext.dependencies["butterknife"]
    compile rootProject.ext.dependencies["androideventbus"]

    //1.3.1 依赖Dagger2
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"] //Butterknife 插件,很多人因为没加这个而报错,切记!!!
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]//依赖插件, annotationProcessor 是 AndroidStudio 自带并用来替换 APT


}
